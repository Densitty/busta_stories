@use "../abstracts";

.header {
  width: 100%;
  height: 100vh;
  position: relative;
  clip-path: polygon(0 0, 100% 0, 100% 87%, 0% 100%);

  @include abstracts.responsive(small) {
    height: 70vh;
  }

  &__logo {
    @include abstracts.position(absolute, 1rem, 0, null, null, null, null);
    // background: rgba(#266baf, 0.4);
    z-index: 10;
    cursor: pointer;
    @include abstracts.responsive(small) {
      width: 11rem;
      height: 6rem;
    }

    img {
      width: 15rem;
      // height: auto;
      height: 8rem;
      object-fit: cover;
      @include abstracts.responsive(small) {
        width: 80%;
        height: 70%;
      }
    }
  }

  &__video {
    @include abstracts.position(absolute, 0, 0, 0, 0, 100%, 100%);
    overflow: hidden;

    video {
      width: 100%;
      height: 100%;
      object-fit: cover;
    }

    img {
      width: 100%;
      height: 100%;
      object-fit: cover;
      object-position: center;
      display: block;
      // image-rendering: pixelated;
      animation: headerImage 0.5s linear;

      @include abstracts.responsive(small) {
        object-position: center;
      }

      @keyframes headerImage {
        0% {
          opacity: 0;
        }
        100% {
          opacity: 1;
        }
      }
    }
  }
}

.header__contents {
  @include abstracts.position(absolute, 0, 0, 0, 0, 100%, 100%);
  @include abstracts.darkBackground(0.4);

  &__text {
    height: 100vh;
    @include abstracts.flexAlign(flex, center, center);

    @include abstracts.responsive(small) {
      height: 65vh;
    }

    &__block {
      color: abstracts.$white;

      &__header {
        text-transform: capitalize;
        font-weight: 900;
        font-size: 4rem;
        line-height: 1.2;
        // animation: name duration timing-function delay iteration-count direction fill-mode;
        @include abstracts.animation(header, 1s, ease-in, null, forwards);
        // responsiveness on the header
        @include abstracts.responsive(medium) {
          font-size: 4rem;
        }

        @include abstracts.responsive(small) {
          font-size: 3rem;
        }

        @include abstracts.responsive(xtrasm) {
          font-size: 2rem;
        }

        @keyframes header {
          0% {
            opacity: 0;
            transform: translateY(-8rem);
          }
          100% {
            opacity: 1;
            transform: translateY(0);
          }
        }
      }

      &__para {
        margin-top: 0.8rem;
        font-size: 1.5rem;
        text-transform: capitalize;
        @include abstracts.animation(para, 0.9s, linear, 0.5s, backwards);
        @include abstracts.responsive(small) {
          margin-top: 0.5rem;
          font-size: 1.4rem;
          line-height: 1.5;
        }

        @keyframes para {
          0% {
            opacity: 0;
            transform: translateX(-8rem);
          }
          100% {
            opacity: 1;
            transform: translateX(0);
          }
        }
      }

      &__link {
        margin-top: 0.8rem;
        @include abstracts.animation(link, 0.9s, ease-in-out, 1s, backwards);

        @keyframes link {
          0% {
            opacity: 0;
            transform: translateY(8rem);
          }
          75% {
            transform: translateY(-2rem);
          }
          100% {
            opacity: 1;
            transform: translateY(0);
          }
        }
      }
    }
  }
}
